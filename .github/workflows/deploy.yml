name: Deploy to VPS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd client && npm install
    
    - name: Run tests
      run: |
        npm run build
        cd client && npm run build
    
    - name: Lint check
      run: |
        cd client && npm run lint --if-present

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm install
        cd client && npm install
    
    - name: Build frontend
      run: |
        cd client && npm run build
        cd ..
    
    - name: Create deployment package
      run: |
        mkdir -p deployment
        cp -r server deployment/
        cp -r client/build deployment/frontend
        cp package.json deployment/
        cp package-lock.json deployment/ || true
        cp .env.example deployment/.env
        cp nginx.conf deployment/
        cp ecosystem.config.js deployment/ || true
        cp deploy.sh deployment/
        chmod +x deployment/deploy.sh
    
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          # Create backup directory
          mkdir -p ~/backups/$(date +%Y%m%d_%H%M%S)
          
          # Stop current application if running
          if pm2 list | grep -q "meet-video"; then
            pm2 stop meet-video
            pm2 delete meet-video
          fi
          
          # Backup current deployment
          if [ -d ~/meet-video ]; then
            mv ~/meet-video ~/backups/$(date +%Y%m%d_%H%M%S)/
          fi
          
          # Create new deployment directory
          mkdir -p ~/meet-video
    
    - name: Upload files
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        source: "deployment/*"
        target: "~/meet-video"
    
    - name: Setup and start application
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_PORT }}
        script: |
          cd ~/meet-video
          
          # Install dependencies
          npm install --production
          
          # Setup environment variables
          if [ ! -f .env ]; then
            cp .env.example .env
            echo "Please update .env file with your configuration"
          fi
          
          # Setup Nginx
          sudo cp nginx.conf /etc/nginx/sites-available/meet-video
          sudo ln -sf /etc/nginx/sites-available/meet-video /etc/nginx/sites-enabled/
          sudo nginx -t && sudo systemctl reload nginx
          
          # Start application with PM2
          pm2 start ecosystem.config.js
          pm2 save
          pm2 startup
          
          echo "Deployment completed successfully!"
          echo "Application URL: http://${{ secrets.VPS_HOST }}"
